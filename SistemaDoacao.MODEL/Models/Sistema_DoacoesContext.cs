// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace SistemaDoacao.MODEL.Models;

public partial class Sistema_DoacoesContext : DbContext
{
    public Sistema_DoacoesContext()
    {
    }

    public Sistema_DoacoesContext(DbContextOptions<Sistema_DoacoesContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ADMINISTRADOR> ADMINISTRADORs { get; set; }

    public virtual DbSet<CATEGORIA> CATEGORIAs { get; set; }

    public virtual DbSet<ENDERECO> ENDERECOs { get; set; }

    public virtual DbSet<LOCALIDADE> LOCALIDADEs { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=PC_MARCO_RYAN\\SQLEXPRESS;Initial Catalog=Sistema_Doacoes;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ADMINISTRADOR>(entity =>
        {
            entity.HasKey(e => e.AdmCodigo).HasName("PK__ADMINIST__BB1662F59C0CE610");

            entity.ToTable("ADMINISTRADOR");

            entity.Property(e => e.AdmSenha)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.AdmUsuario)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<CATEGORIA>(entity =>
        {
            entity.HasKey(e => e.CatCodigo).HasName("PK__CATEGORI__16498BD988485510");

            entity.ToTable("CATEGORIA");

            entity.Property(e => e.CatCodigo).ValueGeneratedNever();
            entity.Property(e => e.CatDataRegistro).HasColumnType("datetime");
            entity.Property(e => e.CatNome)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasMany(d => d.CLCodigoLocalidades).WithMany(p => p.CLCodigoCategoria)
                .UsingEntity<Dictionary<string, object>>(
                    "CATEGORIA_LOCALIDADE",
                    r => r.HasOne<LOCALIDADE>().WithMany()
                        .HasForeignKey("CLCodigoLocalidade")
                        .HasConstraintName("FK__CATEGORIA__CLCod__403A8C7D"),
                    l => l.HasOne<CATEGORIA>().WithMany()
                        .HasForeignKey("CLCodigoCategoria")
                        .HasConstraintName("FK__CATEGORIA__CLCod__3F466844"),
                    j =>
                    {
                        j.HasKey("CLCodigoCategoria", "CLCodigoLocalidade").HasName("PK__CATEGORI__5353452684952420");
                        j.ToTable("CATEGORIA_LOCALIDADE");
                        j.HasIndex(new[] { "CLCodigoCategoria" }, "CATEGORIA_LOCALIDADE_FKIndex1");
                        j.HasIndex(new[] { "CLCodigoLocalidade" }, "CATEGORIA_LOCALIDADE_FKIndex2");
                    });
        });

        modelBuilder.Entity<ENDERECO>(entity =>
        {
            entity.HasKey(e => e.EndCodigo).HasName("PK__ENDERECO__4EB6A165D655290C");

            entity.ToTable("ENDERECO");

            entity.HasIndex(e => e.EndCodigoLocalidade, "ENDERECO_FKIndex1");

            entity.Property(e => e.EndBairro)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EndCEP)
                .IsRequired()
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.EndCidade)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EndComplemento)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EndDataRegistro).HasColumnType("datetime");
            entity.Property(e => e.EndLogradouro)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.EndCodigoLocalidadeNavigation).WithMany(p => p.ENDERECOs)
                .HasForeignKey(d => d.EndCodigoLocalidade)
                .HasConstraintName("FK__ENDERECO__EndCod__3C69FB99");
        });

        modelBuilder.Entity<LOCALIDADE>(entity =>
        {
            entity.HasKey(e => e.LocCodigo).HasName("PK__LOCALIDA__897DF110AED81FC7");

            entity.ToTable("LOCALIDADE");

            entity.Property(e => e.LocDescricao)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.LocNome)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LocSite)
                .HasMaxLength(200)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}